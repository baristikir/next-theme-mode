import{createContext as e,useContext as t,useState as r,useEffect as o}from"react";var n=e({}),c=function(){var e=t(n);if(void 0===e)throw new Error("useTheme must  be  used within a ThemeModeContext  Provider");return e};function i(e,t){var c=e.children,i=r(""),a=i[0],l=i[1];return o(function(){var e=window.document.documentElement.style.getPropertyValue("--initial-color-mode");l(e)},[]),React.createElement(n.Provider,{value:{customThemes:t,colorMode:a,setColorMode:function(e){var r=window.document.documentElement;l(e),localStorage.setItem("color-mode",e),Object.entries(t[e]).forEach(function(e){r.style.setProperty("--color-"+e[0],String(e[1]))})}}},c)}function a(){var e=function(){var e=window.localStorage.getItem("color-mode");if("string"==typeof e)return e;var t=window.matchMedia("(prefers-color-scheme: dark)");return"boolean"==typeof t.matches&&t.matches?"dark":"light"}(),t=document.documentElement;t.style.setProperty("--initial-color-mode",e),Object.entries("substitutedForTheme"[e]).forEach(function(e){t.style.setProperty("--color-"+e[0],String(e[1]))})}function l(e){var t=String(a).replace("'substitutedForTheme'",JSON.stringify(e));return React.createElement("script",{id:"theme-rehydrate",dangerouslySetInnerHTML:{__html:"("+t+")()"}})}export{l as ScriptHydrationTheme,n as ThemeContext,i as ThemeProvider,c as useTheme};
